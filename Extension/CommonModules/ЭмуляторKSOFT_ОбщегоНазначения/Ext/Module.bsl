Процедура СохранитьВременноеЗначениеОборудования(ИмяПараметра, ЗначениеПараметра) Экспорт 
	ХранилищеОбщихНастроек.Сохранить("KSOFT_ЭмуляторККТ_54_ФЗ", ИмяПараметра + "_" + ИдентификаторКлиента(), ЗначениеПараметра);	
КонецПроцедуры
 
Функция ПолучитьВременноеЗначениеОборудования(ИмяПараметра) Экспорт
	Возврат ХранилищеОбщихНастроек.Загрузить("KSOFT_ЭмуляторККТ_54_ФЗ", ИмяПараметра + "_" + ИдентификаторКлиента());
КонецФункции

Функция ПараметрСуществуетИНЕРавенЗначению(пПараметры, пИмяПараметры, пЗначение) Экспорт
	Возврат пПараметры.Свойство(пИмяПараметры) И НЕ пПараметры [пИмяПараметры] = пЗначение; 	
КонецФункции

Функция ПараметрСуществуетИРавенЗначению(пПараметры, пИмяПараметры, пЗначение) Экспорт
	Возврат пПараметры.Свойство(пИмяПараметры) И пПараметры [пИмяПараметры] = пЗначение; 	
КонецФункции

Функция ПараметрСуществуетИЗаполнен(пПараметры, пИмяПараметры) Экспорт
	Если ТипЗнч(пПараметры) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Возврат пПараметры.Свойство(пИмяПараметры) И 
		ЗначениеЗаполнено(пПараметры [пИмяПараметры]);
КонецФункции

Функция ПолучитьТипОС()
	ДанныеСистемы = Новый СистемнаяИнформация;
	Попытка
		Если ДанныеСистемы.ТипПлатформы = Вычислить("ТипПлатформы.Linux_x86") 
			ИЛИ ДанныеСистемы.ТипПлатформы = Вычислить("ТипПлатформы.Linux_x86_64") Тогда
			Возврат "LINUX";
		КонецЕсли;
	Исключение
	КонецПопытки;
	Возврат "WINDOWS";
КонецФункции

Функция ПоддержкаФункционалаПлатформой1С() Экспорт 
	ПоддержкаФункционалаПлатформой1С = ПолучитьВременноеЗначениеОборудования("ПоддержкаФункционалаПлатформой1С");
	Если ПоддержкаФункционалаПлатформой1С = Неопределено Тогда
		ПоддержкаФункционалаПлатформой1С = Новый Структура;
		ВерсияПлатформыЧисло = ВерсияПлатформыВЧисло();
		ПоддержкаФункционалаПлатформой1С.Вставить("ПоддержкаJSON", ВерсияПлатформыЧисло > 80300600000); //8.3.6
		ПоддержкаФункционалаПлатформой1С.Вставить("HTTPСоединениеНовогоФормата", ВерсияПлатформыЧисло > 80201800000); //8.2.18 Поддержка Таймаут
		ПоддержкаФункционалаПлатформой1С.Вставить("МожноИспользоватьCOM", ПолучитьТипОС() = "WINDOWS");
		СохранитьВременноеЗначениеОборудования("ПоддержкаФункционалаПлатформой1С", ПоддержкаФункционалаПлатформой1С);
	КонецЕсли; 
	
	Возврат ПоддержкаФункционалаПлатформой1С;
КонецФункции

Функция ВерсияПлатформыВЧисло()
	ПоляВерсии = СтрРазделить(ВерсияПлатформы(), ".");  
	Возврат Число(ПоляВерсии[0]) * 100 * 1000 * 100000 + Число(ПоляВерсии[1]) * 1000 * 100000 + Число(ПоляВерсии[2])*100000 + Число(ПоляВерсии[3]);		
КонецФункции

Функция ВерсияПлатформы()
	Попытка
		лСИ = Вычислить("Новый СистемнаяИнформация");
		Возврат лСИ.ВерсияПриложения;
	Исключение
		Возврат "8.0.0.000";
	КонецПопытки;
КонецФункции

Функция ККТ_СтруктураЗаполнена(ДанныеСтруктуры) Экспорт
	Если ДанныеСтруктуры = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли; 
	Для Каждого ЭлементСтруктуры Из ДанныеСтруктуры Цикл
		Если ЗначениеЗаполнено(ЭлементСтруктуры.Значение) Тогда
			Возврат Истина;			
		КонецЕсли; 
	КонецЦикла; 
	Возврат Ложь
КонецФункции
 
Функция ИдентификаторКлиента()
	СИ = Новый СистемнаяИнформация;
	Возврат СтрЗаменить(Строка(СИ.ИдентификаторКлиента), "-", "");
КонецФункции
 