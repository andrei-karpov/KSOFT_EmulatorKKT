//ENGLISH 

Процедура BeginCallingGetVersion(ОповещениеМетода) Экспорт
	НачатьВызовПолучитьНомерВерсии(ОповещениеМетода);	
КонецПроцедуры
 
Процедура BeginCallingGetInterfaceRevision(ОповещениеМетода) Экспорт
	НачатьВызовПолучитьРевизиюИнтерфейса(ОповещениеМетода);	
КонецПроцедуры
 
Процедура BeginCallingGetDataKKT(ОповещениеМетода, ИДУстройства, ПараметрыККТ) Экспорт //
	НачатьВызовПолучитьПараметрыККТ(ОповещениеМетода, ИДУстройства, ПараметрыККТ);		
КонецПроцедуры

Процедура BeginCallingOpenShift(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры) Экспорт
	НачатьВызовОткрытьСмену(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры);
КонецПроцедуры

Процедура BeginCallingCloseShift(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры) Экспорт
	Если НЕ 1 = 1 Тогда
		Сч = "Сервис";
	КонецЕсли; 
	НачатьВызовЗакрытьСмену(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры);
КонецПроцедуры

Процедура BeginCallingProcessCheck(ОповещениеМетода, ИДУстройства, Электронно, ДанныеЧека, ВыходныеПараметрыДокумента) Экспорт
	НачатьВызовСформироватьЧек(ОповещениеМетода, ИДУстройства, Электронно, ДанныеЧека, ВыходныеПараметрыДокумента); 
КонецПроцедуры

Процедура BeginCallingProcessCorrectionCheck(ОповещениеМетода, ИДУстройства, ДанныеЧека, ВыходныеПараметрыДокумента) Экспорт
	НачатьВызовСформироватьЧекКоррекции(ОповещениеМетода, ИДУстройства, ДанныеЧека, ВыходныеПараметрыДокумента);
КонецПроцедуры

Процедура BeginCallingPrintTextDocument(ОповещениеМетода, ИДУстройства, ДанныеДокумента) Экспорт
	НачатьВызовНапечататьТекстовыйДокумент(ОповещениеМетода, ИДУстройства, ДанныеДокумента);
КонецПроцедуры

Процедура BeginCallingCashInOutcome(ОповещениеМетода, ИДУстройства, ВходныеПараметры, пСумма) Экспорт
	НачатьВызовНапечататьЧекВнесенияВыемки(ОповещениеМетода, ИДУстройства, ВходныеПараметры, пСумма);		
КонецПроцедуры

Процедура BeginCallingPrintXReport(ОповещениеМетода, ИДУстройства, ВходныеПараметры) Экспорт
	НачатьВызовНапечататьОтчетБезГашения(ОповещениеМетода, ИДУстройства, ВходныеПараметры);
КонецПроцедуры

Процедура BeginCallingGetCurrentStatus(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры) Экспорт
	НачатьВызовПолучитьТекущееСостояние(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры); 
КонецПроцедуры
   
Процедура BeginCallingGetAdditionalActions(ОповещениеМетода, ДополнительныеДействия) Экспорт
	НачатьВызовПолучитьДополнительныеДействия(ОповещениеМетода, ДополнительныеДействия);	
КонецПроцедуры

Процедура BeginCallingDeviceTest(ОповещениеМетода, Описание, АктивированДемоРежим) Экспорт 
	НачатьВызовТестУстройства(ОповещениеМетода, Описание, АктивированДемоРежим);			
КонецПроцедуры

Процедура BeginCallingOpen(ОповещениеМетода, пИДУстройства) Экспорт	
	НачатьВызовПодключить(ОповещениеМетода, пИДУстройства);
КонецПроцедуры

Процедура BeginCallingClose(ОповещениеМетода, ИДУстройства) Экспорт
	НачатьВызовОтключить(ОповещениеМетода, ИДУстройства);
КонецПроцедуры

Процедура BeginCallingGetLastError(ОповещениеМетода, пИнформацияОбОшибке) Экспорт
	НачатьВызовПолучитьОшибку(ОповещениеМетода, пИнформацияОбОшибке);
КонецПроцедуры

Процедура BeginCallingGetDescription(ОповещениеМетода, ОписаниеДрайвера) Экспорт
	Если НЕ 1 = 1 Тогда
		Сч = "Сервис";
	КонецЕсли; 
	НачатьВызовПолучитьОписание(ОповещениеМетода, ОписаниеДрайвера); 
КонецПроцедуры

Процедура BeginCallingOpenCashDrawer(ОповещениеМетода, ИДУстройства) Экспорт
	НачатьВызовОткрытьДенежныйЯщик(ОповещениеМетода, ИДУстройства);
КонецПроцедуры

Процедура BeginCallingGetParameters(ОповещениеМетода, ПараметрыДрайвера) Экспорт
	НачатьВызовПолучитьПараметры(ОповещениеМетода, ПараметрыДрайвера);
КонецПроцедуры

Процедура BeginCallingReportCurrentStatusOfSettlements(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры) Экспорт
	НачатьВызовОтчетОТекущемСостоянииРасчетов(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры);	
КонецПроцедуры

Процедура BeginCallingSetParameter(ОповещениеМетода, ИмяПараметра, ЗначениеПараметра) Экспорт
	НачатьВызовУстановитьПараметр(ОповещениеМетода, ИмяПараметра, ЗначениеПараметра);
КонецПроцедуры

Процедура BeginCallingGetLineLength(ОповещениеМетода, ИДУстройства, ШиринаСтроки) Экспорт
	НачатьВызовПолучитьШиринуСтроки(ОповещениеМетода, ИДУстройства, ШиринаСтроки);
КонецПроцедуры

//Процедура BeginCallingOperationFN(ОповещениеМетода, ИДУстройства, ТипОперации, ПараметрыФискализацииXML) Экспорт
//	НачатьВызовОперацияФН(ОповещениеМетода, ИДУстройства, ТипОперации, ПараметрыФискализацииXML);
//КонецПроцедуры

Процедура BeginCallingDoAdditionalAction(ОповещениеМетода, пИмяДействия) Экспорт
	НачатьВызовВыполнитьДополнительноеДействие(ОповещениеМетода,пИмяДействия);
КонецПроцедуры

Процедура BeginCallingPrintCheckCopy(ОповещениеМетода, ИДУстройства, НомерЧека) Экспорт
	НачатьВызовНапечататьКопиюЧека(ОповещениеМетода, ИДУстройства, НомерЧека);		
КонецПроцедуры

//ENGLISH 

Процедура НачатьВызовПолучитьНомерВерсии(ОповещениеМетода) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьНомерВерсии();
	ПараметрыВызова = Новый Массив;	
	
	Если ОповещениеМетода.ИмяПроцедуры = "НачатьПолучениеОписаниеДрайвера_ПолучитьНомерВерсииЗавершение" Тогда
		ОповещениеМетода.Модуль.НачатьПолучениеОписаниеДрайвера_ПолучитьНомерВерсииЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "НачатьПолучениеВерсииДрайвера_Завершение" Тогда 
		ОповещениеМетода.Модуль.НачатьПолучениеВерсииДрайвера_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 		
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 
	
КонецПроцедуры
 
Процедура НачатьВызовПолучитьРевизиюИнтерфейса(ОповещениеМетода) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьРевизиюИнтерфейса();
	ПараметрыВызова = Новый Массив;
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 	
	
КонецПроцедуры

Процедура НачатьВызовПолучитьПараметрыККТ(ОповещениеМетода, ИДУстройства, ПараметрыККТ) Экспорт  //
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьПараметрыККТ(ИДУстройства, ПараметрыККТ);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(ПараметрыККТ);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "НачатьПолучениеПараметровККТ_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьПолучениеПараметровККТ_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 		
	
КонецПроцедуры

Процедура НачатьВызовОткрытьСмену(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ОткрытьСмену(ИДУстройства, ВходныеПараметры, ВыходныеПараметры);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(ВходныеПараметры);
	ПараметрыВызова.Добавить(ВыходныеПараметры);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "НачатьОперациюСоСменой_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьОперациюСоСменой_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 		   
		
КонецПроцедуры

Процедура НачатьВызовЗакрытьСмену(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ЗакрытьСмену(ИДУстройства, ВходныеПараметры, ВыходныеПараметры);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(ВходныеПараметры);
	ПараметрыВызова.Добавить(ВыходныеПараметры);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "НачатьОперациюСоСменой_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьОперациюСоСменой_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры

Процедура НачатьВызовНапечататьЧекВнесенияВыемки(ОповещениеМетода, ИДУстройства, ВходныеПараметры, пСумма) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.НапечататьЧекВнесенияВыемки(ИДУстройства, ВходныеПараметры, пСумма);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(ВходныеПараметры);
	ПараметрыВызова.Добавить(пСумма);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры

Процедура НачатьВызовНапечататьОтчетБезГашения(ОповещениеМетода, ИДУстройства, ВходныеПараметры) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.НапечататьОтчетБезГашения(ИДУстройства, ВходныеПараметры);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(ВходныеПараметры);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура НачатьВызовСформироватьЧек(ОповещениеМетода, ИДУстройства, Электронно, ДанныеЧека, ВыходныеПараметрыДокумента) Экспорт 
	
	//Эти говнори не удосужились проверить код на работоспособность в новой ревизии
	//Возвращать должно было 4 параметра, а тут как по-старому, зато блин входящих параметров 4
	
	НомерЧека = 0;
	НомерСмены = 0;
	ФискальныйПризнак = "";
	АдресСайтаПроверки = "";
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.СформироватьЧек2005(ИДУстройства, Электронно, ДанныеЧека, НомерЧека, НомерСмены, ФискальныйПризнак, АдресСайтаПроверки);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(Электронно);
	ПараметрыВызова.Добавить(ДанныеЧека);
	ПараметрыВызова.Добавить(НомерЧека);
	ПараметрыВызова.Добавить(НомерСмены);
	ПараметрыВызова.Добавить(ФискальныйПризнак);
	ПараметрыВызова.Добавить(АдресСайтаПроверки);
		
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "НачатьФискализациюЧека_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьФискализациюЧека_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры);
	КонецЕсли; 
	
КонецПроцедуры

Процедура НачатьВызовСформироватьЧекКоррекции(ОповещениеМетода, ИДУстройства, ДанныеЧека, ВыходныеПараметрыДокумента, НомерСменыККТ = Неопределено,
				ФискальныйПризнак = Неопределено, АдресСайтаПроверки = Неопределено) Экспорт
	
	Если НомерСменыККТ <> Неопределено Тогда
		//Тогда делаем опять по дебильному
		РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.СформироватьЧекКоррекции2005(ИДУстройства, 
													ДанныеЧека, ВыходныеПараметрыДокумента,
													НомерСменыККТ,ФискальныйПризнак, АдресСайтаПроверки);
			
		ПараметрыВызова = Новый Массив;	
		ПараметрыВызова.Добавить(ИДУстройства);
		ПараметрыВызова.Добавить(ДанныеЧека);
		ПараметрыВызова.Добавить(ВыходныеПараметрыДокумента);
		ПараметрыВызова.Добавить(НомерСменыККТ);
		ПараметрыВызова.Добавить(ФискальныйПризнак);
		ПараметрыВызова.Добавить(АдресСайтаПроверки);
		
	Иначе
		РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.СформироватьЧекКоррекции(ИДУстройства, ДанныеЧека, ВыходныеПараметрыДокумента);
		
		ПараметрыВызова = Новый Массив;	
		ПараметрыВызова.Добавить(ИДУстройства);
		ПараметрыВызова.Добавить(ДанныеЧека);
		ПараметрыВызова.Добавить(ВыходныеПараметрыДокумента);
	
	КонецЕсли; 
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "НачатьПечатьЧекаКоррекции_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьПечатьЧекаКоррекции_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры);
	КонецЕсли; 

КонецПроцедуры

Процедура НачатьВызовНапечататьТекстовыйДокумент(ОповещениеМетода, ИДУстройства, ДанныеДокумента) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.НапечататьТекстовыйДокумент(ИДУстройства, ДанныеДокумента);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(ДанныеДокумента);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры

Процедура НачатьВызовПолучитьТекущееСостояние(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры, СтатусСмены = Неопределено, ПараметрыСостояния = Неопределено) Экспорт
	
	Если СтатусСмены <> Неопределено Тогда
		
		РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьТекущееСостояние2005(ИДУстройства, ВходныеПараметры, ВыходныеПараметры, СтатусСмены, ПараметрыСостояния);
		
		ПараметрыВызова = Новый Массив;	
		ПараметрыВызова.Добавить(ИДУстройства);
		ПараметрыВызова.Добавить(ВходныеПараметры);
		ПараметрыВызова.Добавить(ВыходныеПараметры);
		ПараметрыВызова.Добавить(СтатусСмены);
		ПараметрыВызова.Добавить(ПараметрыСостояния);
		
	Иначе	
		
		РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьТекущееСостояние(ИДУстройства, ВходныеПараметры, ВыходныеПараметры);
		
		ПараметрыВызова = Новый Массив;	
		ПараметрыВызова.Добавить(ИДУстройства);
		ПараметрыВызова.Добавить(ВходныеПараметры);
		ПараметрыВызова.Добавить(ВыходныеПараметры);
		
	КонецЕсли;
	
	Если ОповещениеМетода.ИмяПроцедуры = "НачатьПолучениеТекущееСостояние_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьПолучениеТекущееСостояние_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли;  
	
КонецПроцедуры
 
Процедура НачатьВызовПолучитьДополнительныеДействия(ОповещениеМетода, ДополнительныеДействия) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьДополнительныеДействия(ДополнительныеДействия);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ДополнительныеДействия);
	
	Если ОповещениеМетода.ИмяПроцедуры = "НачатьПолучениеОписаниеДрайвера_ПолучитьДополнительныеДействияЗавершение" Тогда
		ОповещениеМетода.Модуль.НачатьПолучениеОписаниеДрайвера_ПолучитьДополнительныеДействияЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли;  
	
КонецПроцедуры

Процедура НачатьВызовТестУстройства(ОповещениеМетода, Описание, АктивированДемоРежим) Экспорт 
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ТестУстройства(Описание, АктивированДемоРежим);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(Описание);
	ПараметрыВызова.Добавить(АктивированДемоРежим);
	
	Если ОповещениеМетода.ИмяПроцедуры = "НачатьТестУстройства_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьТестУстройства_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры);
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры

Процедура НачатьВызовПодключить(ОповещениеМетода, ИДУстройства) Экспорт	
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.Подключить(ИДУстройства);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	
	Если ОповещениеМетода.ИмяПроцедуры = "НачатьПодключениеУстройства_ПодключитьЗавершение" Тогда
		ОповещениеМетода.Модуль.НачатьПодключениеУстройства_ПодключитьЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура НачатьВызовОтключить(ОповещениеМетода, ИДУстройства) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.Отключить(ИДУстройства);
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);

	Если ОповещениеМетода.ИмяПроцедуры = "НачатьОтключениеУстройства_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьОтключениеУстройства_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры

Процедура НачатьВызовПолучитьОшибку(ОповещениеМетода, пИнформацияОбОшибке) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьОшибку(пИнформацияОбОшибке);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(пИнформацияОбОшибке);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ПолучениеОшибкиЗавершение" Тогда
		ОповещениеМетода.Модуль.ПолучениеОшибкиЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 	
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры

//Существует баг на веб клиенте, ревизия интерфейса 3002, однако
//Получается она как для старых ревизий, поэтому в функции может быть
//сразу 8 параметров, если это так, значит обрабатываем информацию по старому
Процедура НачатьВызовПолучитьОписание(ОповещениеМетода, ОписаниеНаименованиеДрайвера, 
						ОписаниеДрайвера = Неопределено, ТипОборудования = Неопределено, 
						РевизияИнтерфейса = Неопределено, ИнтеграционныйКомпонент = Неопределено, 
						ОсновнойДрайверУстановлен = Неопределено, URLЗагрузкиДрайвера = Неопределено) Экспорт
						
	Если ОписаниеДрайвера <> Неопределено Тогда //Передаем по старому
		
		РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьОписание2005(ОписаниеНаименованиеДрайвера, 
																	ОписаниеДрайвера, ТипОборудования, РевизияИнтерфейса, 
																	ИнтеграционныйКомпонент, ОсновнойДрайверУстановлен, 
																	URLЗагрузкиДрайвера);
		ПараметрыВызова = Новый Массив;	
		ПараметрыВызова.Добавить(ОписаниеНаименованиеДрайвера);
		ПараметрыВызова.Добавить(ОписаниеДрайвера);
		ПараметрыВызова.Добавить(ТипОборудования);
		ПараметрыВызова.Добавить(РевизияИнтерфейса);
		ПараметрыВызова.Добавить(ИнтеграционныйКомпонент);
		ПараметрыВызова.Добавить(ОсновнойДрайверУстановлен);
		ПараметрыВызова.Добавить(URLЗагрузкиДрайвера);	
		
	Иначе
		РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьОписание(ОписаниеНаименованиеДрайвера);	
		ПараметрыВызова = Новый Массив;	
		ПараметрыВызова.Добавить(ОписаниеНаименованиеДрайвера);
	КонецЕсли; 
	
	Если ОповещениеМетода.ИмяПроцедуры = "НачатьПодключениеУстройства_ПолучитьОписаниеЗавершение" Тогда
		ОповещениеМетода.Модуль.НачатьПодключениеУстройства_ПолучитьОписаниеЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 	
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "НачатьПолучениеОписаниеДрайвера_ПолучитьОписаниеЗавершение" Тогда 	
		ОповещениеМетода.Модуль.НачатьПолучениеОписаниеДрайвера_ПолучитьОписаниеЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 	
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 
 
КонецПроцедуры

Процедура НачатьВызовОткрытьДенежныйЯщик(ОповещениеМетода, ИДУстройства) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ОткрытьДенежныйЯщик(ИДУстройства);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура НачатьВызовПолучитьПараметры(ОповещениеМетода, ПараметрыДрайвера) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьПараметры(ПараметрыДрайвера);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ПараметрыДрайвера);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	ИначеЕсли ОповещениеМетода.ИмяПроцедуры = "НачатьПолучениеОписаниеДрайвера_ПолучитьПараметрыЗавершение" Тогда
		ОповещениеМетода.Модуль.НачатьПолучениеОписаниеДрайвера_ПолучитьПараметрыЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры);	
	КонецЕсли; 
	
КонецПроцедуры

Процедура НачатьВызовОтчетОТекущемСостоянииРасчетов(ОповещениеМетода, ИДУстройства, ВходныеПараметры, ВыходныеПараметры) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ОтчетОТекущемСостоянииРасчетов(ИДУстройства, ВходныеПараметры, ВыходныеПараметры);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(ВходныеПараметры);
	ПараметрыВызова.Добавить(ВыходныеПараметры);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры

Процедура НачатьВызовУстановитьПараметр(ОповещениеМетода, ИмяПараметра, ЗначениеПараметра) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.УстановитьПараметр(ИмяПараметра, ЗначениеПараметра);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИмяПараметра);
	ПараметрыВызова.Добавить(ЗначениеПараметра);
	
	ОповещениеМетода.Модуль.НачатьУстановкуПараметров_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	
КонецПроцедуры

Процедура НачатьВызовПолучитьШиринуСтроки(ОповещениеМетода, ИДУстройства, ШиринаСтроки) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ПолучитьШиринуСтроки(ИДУстройства, ШиринаСтроки);
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(ШиринаСтроки);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура НачатьВызовВыполнитьДополнительноеДействие(ОповещениеМетода, пИмяДействия) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.ВыполнитьДополнительноеДействие(пИмяДействия);
	
	ПараметрыВызова = Новый Массив;	
	ПараметрыВызова.Добавить(пИмяДействия);
	
	Если ОповещениеМетода.ИмяПроцедуры = "НачатьВыполнитьДополнительноеДействие_Завершение" Тогда
		ОповещениеМетода.Модуль.НачатьВыполнитьДополнительноеДействие_Завершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры

Процедура НачатьВызовНапечататьКопиюЧека(ОповещениеМетода, ИДУстройства, НомерЧека) Экспорт
	
	РезультатВызова = ЭмуляторKSOFT_ПодключаемоеОборудованиеКлиент.НапечататьКопиюЧека(ИДУстройства, НомерЧека);
	
	ПараметрыВызова = Новый Массив;
	ПараметрыВызова.Добавить(ИДУстройства);
	ПараметрыВызова.Добавить(НомерЧека);
	
	Если ОповещениеМетода.ИмяПроцедуры = "ВыполнениеМетодаЗавершение" Тогда
		ОповещениеМетода.Модуль.ВыполнениеМетодаЗавершение(РезультатВызова, ПараметрыВызова, ОповещениеМетода.ДополнительныеПараметры); 
	КонецЕсли; 

КонецПроцедуры
